{
	"rules": {
		"blueprints": {
			".read": "true",
			"$blueprint": {
				".write": "!data.exists() || (data.child('authorId').val() === auth.uid || data.child('author').child('userId').val() === auth.uid) && newData.exists() || root.child('moderators').child(auth.uid).val() === true",
				".validate": "newData.hasChildren(['author']) || newData.hasChildren(['authorId'])",
				"author": {
					".validate": "newData.child('userId').isString()",
					"userId": {
						".validate": "newData.val() === auth.uid"
					}
				},
				"favorites": {
					"$uid": {
						".write": "auth != null && auth.uid == $uid"
					}
				},
				"numberOfFavorites": {
					".write": "auth != null"
				}
			}
		},
		"users": {
			".read": "root.child('moderators').child(auth.uid).val() === true",
			"$uid": {
				".read": "auth != null && auth.uid == $uid",
				".write": "auth != null && auth.uid == $uid",
				"blueprints": {
					".read": "true",
					".write": "root.child('moderators').child(auth.uid).val() === true"
				},
				"displayName": {
					".read": "true"
				}
			}
		},
		"moderators": {
			".read": "true"
		},
		"thumbnails": {
			".read": "true",
			"$blueprint": {
				".write": "root.child('blueprints').child($blueprint).child('author').child('userId').val() === auth.uid || root.child('moderators').child(auth.uid).val() === true"
			}
		},
		"blueprintSummaries": {
			".read": "true",
			".indexOn": ["lastUpdatedDate", "numberOfFavorites"],
			"$blueprint": {
				".write": "root.child('blueprints').child($blueprint).child('authorId').val() === auth.uid || root.child('blueprints').child($blueprint).child('author').child('userId').val() === auth.uid || root.child('moderators').child(auth.uid).val() === true",
				"numberOfFavorites": {
					".write": "auth != null"
				}
			}
		},
		"blueprintsPrivate": {
			".read": "true",
			"$blueprint": {
				".write": "root.child('blueprints').child($blueprint).child('authorId').val() === auth.uid || root.child('blueprints').child($blueprint).child('author').child('userId').val() === auth.uid || root.child('moderators').child(auth.uid).val() === true"
			}
		},
		"tags": {
			".read": "true"
		},
		"byTag": {
			".read": "true",
			".write": "true"
		}
	}
}
