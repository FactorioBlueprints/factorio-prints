import js from '@eslint/js'
import globals from 'globals'
import reactHooks from 'eslint-plugin-react-hooks'
import reactRefresh from 'eslint-plugin-react-refresh'
import tseslint from '@typescript-eslint/eslint-plugin'
import tsparser from '@typescript-eslint/parser'
import type { Linter } from 'eslint'

const config: Linter.Config[] = [
	{ ignores: ['dist', 'build', '.llm/**'] },
	{
		files          : ['public/**/*.{ts,tsx}'],
		languageOptions: {
			globals: {
				ServiceWorkerGlobalScope: 'readonly',
				ExtendableEvent         : 'readonly',
			},
		},
	},
	{
		files          : ['vite.config.ts', 'vitest.config.ts'],
		languageOptions: {
			globals: {
				process: 'readonly',
			},
		},
	},
	{
		files          : ['**/*.test.{js,jsx,ts,tsx}', '**/*.spec.{js,jsx,ts,tsx}', '**/setupTests.{js,ts}'],
		languageOptions: {
			globals: {
				...globals.browser,
				...globals.jest,
				vi        : 'readonly',
				expect    : 'readonly',
				it        : 'readonly',
				describe  : 'readonly',
				beforeEach: 'readonly',
				afterEach : 'readonly',
			},
		},
	},
	{
		files          : ['**/*.{js,jsx}'],
		languageOptions: {
			ecmaVersion: 2020,
			globals    : {
				...globals.browser,
				...globals.jest,
			},
			parserOptions: {
				ecmaVersion : 'latest',
				ecmaFeatures: { jsx: true },
				sourceType  : 'module',
			},
		},
		plugins: {
			'react-hooks'  : reactHooks,
			'react-refresh': reactRefresh,
		},
		rules: {
			...js.configs.recommended.rules,
			...reactHooks.configs.recommended.rules,
			'react-hooks/exhaustive-deps'         : 'error',
			'no-unused-vars'                      : ['error', { varsIgnorePattern: '^[A-Z_]' }],
			'react-refresh/only-export-components': [
				'warn',
				{ allowConstantExport: true },
			],
			// Formatting rules - disabled in favor of Biome
			'array-bracket-spacing'   : 'off',
			'array-element-newline'   : 'off',
			'arrow-parens'            : 'off',
			'arrow-spacing'           : 'off',
			'block-spacing'           : 'off',
			'brace-style'             : 'off',
			'comma-dangle'            : 'off',
			'comma-spacing'           : 'off',
			'comma-style'             : 'off',
			'computed-property-spacing': 'off',
			'dot-location'            : 'off',
			'eol-last'                : 'off',
			'func-call-spacing'       : 'off',
			'function-call-argument-newline': 'off',
			'function-paren-newline'  : 'off',
			'generator-star-spacing'  : 'off',
			'implicit-arrow-linebreak': 'off',
			'indent'                  : 'off',
			'jsx-quotes'              : 'off',
			'key-spacing'             : 'off',
			'keyword-spacing'         : 'off',
			'linebreak-style'         : 'off',
			'max-len'                 : 'off',
			'multiline-ternary'       : 'off',
			'newline-per-chained-call': 'off',
			'no-extra-parens'         : 'off',
			'no-extra-semi'           : 'off',
			'no-floating-decimal'     : 'off',
			'no-mixed-spaces-and-tabs': 'off',
			'no-multi-spaces'         : 'off',
			'no-multiple-empty-lines' : 'off',
			'no-tabs'                 : 'off',
			'no-trailing-spaces'      : 'off',
			'no-whitespace-before-property': 'off',
			'object-curly-newline'    : 'off',
			'object-curly-spacing'    : 'off',
			'object-property-newline' : 'off',
			'operator-linebreak'      : 'off',
			'padded-blocks'           : 'off',
			'quote-props'             : 'off',
			'quotes'                  : 'off',
			'rest-spread-spacing'     : 'off',
			'semi'                    : 'off',
			'semi-spacing'            : 'off',
			'semi-style'              : 'off',
			'space-before-blocks'     : 'off',
			'space-before-function-paren': 'off',
			'space-in-parens'         : 'off',
			'space-infix-ops'         : 'off',
			'space-unary-ops'         : 'off',
			'switch-colon-spacing'    : 'off',
			'template-curly-spacing'  : 'off',
			'template-tag-spacing'    : 'off',
			'yield-star-spacing'      : 'off',
			// Non-formatting rules
			'eqeqeq'                  : ['error', 'smart'],
			'one-var'                 : ['error', 'never'],
			'react/no-array-index-key': 'off',
		},
	},
	{
		files          : ['**/*.{ts,tsx}'],
		languageOptions: {
			ecmaVersion: 2020,
			globals    : {
				...globals.browser,
				...globals.jest,
			},
			parser       : tsparser,
			parserOptions: {
				ecmaVersion : 'latest',
				ecmaFeatures: { jsx: true },
				sourceType  : 'module',
				project     : './tsconfig.json',
			},
		},
		plugins: {
			'@typescript-eslint': tseslint as any,
			'react-hooks'       : reactHooks,
			'react-refresh'     : reactRefresh,
		},
		rules: {
			...tseslint.configs.recommended.rules,
			...reactHooks.configs.recommended.rules,
			'react-hooks/exhaustive-deps'         : 'error',
			'@typescript-eslint/no-unused-vars'   : ['error', { varsIgnorePattern: '^[A-Z_]' }],
			'@typescript-eslint/no-explicit-any'  : 'off', // TODO: Consider enabling this later
			'react-refresh/only-export-components': [
				'warn',
				{ allowConstantExport: true },
			],
			// Formatting rules - disabled in favor of Biome
			'array-bracket-spacing'   : 'off',
			'array-element-newline'   : 'off',
			'arrow-parens'            : 'off',
			'arrow-spacing'           : 'off',
			'block-spacing'           : 'off',
			'brace-style'             : 'off',
			'comma-dangle'            : 'off',
			'comma-spacing'           : 'off',
			'comma-style'             : 'off',
			'computed-property-spacing': 'off',
			'dot-location'            : 'off',
			'eol-last'                : 'off',
			'func-call-spacing'       : 'off',
			'function-call-argument-newline': 'off',
			'function-paren-newline'  : 'off',
			'generator-star-spacing'  : 'off',
			'implicit-arrow-linebreak': 'off',
			'indent'                  : 'off',
			'jsx-quotes'              : 'off',
			'key-spacing'             : 'off',
			'keyword-spacing'         : 'off',
			'linebreak-style'         : 'off',
			'max-len'                 : 'off',
			'multiline-ternary'       : 'off',
			'newline-per-chained-call': 'off',
			'no-extra-parens'         : 'off',
			'no-extra-semi'           : 'off',
			'no-floating-decimal'     : 'off',
			'no-mixed-spaces-and-tabs': 'off',
			'no-multi-spaces'         : 'off',
			'no-multiple-empty-lines' : 'off',
			'no-tabs'                 : 'off',
			'no-trailing-spaces'      : 'off',
			'no-whitespace-before-property': 'off',
			'object-curly-newline'    : 'off',
			'object-curly-spacing'    : 'off',
			'object-property-newline' : 'off',
			'operator-linebreak'      : 'off',
			'padded-blocks'           : 'off',
			'quote-props'             : 'off',
			'quotes'                  : 'off',
			'rest-spread-spacing'     : 'off',
			'semi'                    : 'off',
			'semi-spacing'            : 'off',
			'semi-style'              : 'off',
			'space-before-blocks'     : 'off',
			'space-before-function-paren': 'off',
			'space-in-parens'         : 'off',
			'space-infix-ops'         : 'off',
			'space-unary-ops'         : 'off',
			'switch-colon-spacing'    : 'off',
			'template-curly-spacing'  : 'off',
			'template-tag-spacing'    : 'off',
			'yield-star-spacing'      : 'off',
			// TypeScript-specific formatting rules
			'@typescript-eslint/brace-style'           : 'off',
			'@typescript-eslint/comma-dangle'          : 'off',
			'@typescript-eslint/comma-spacing'         : 'off',
			'@typescript-eslint/func-call-spacing'     : 'off',
			'@typescript-eslint/indent'                : 'off',
			'@typescript-eslint/keyword-spacing'       : 'off',
			'@typescript-eslint/member-delimiter-style': 'off',
			'@typescript-eslint/no-extra-parens'       : 'off',
			'@typescript-eslint/no-extra-semi'         : 'off',
			'@typescript-eslint/object-curly-spacing'  : 'off',
			'@typescript-eslint/quotes'                : 'off',
			'@typescript-eslint/semi'                  : 'off',
			'@typescript-eslint/space-before-blocks'   : 'off',
			'@typescript-eslint/space-before-function-paren': 'off',
			'@typescript-eslint/space-infix-ops'       : 'off',
			'@typescript-eslint/type-annotation-spacing': 'off',
			// Non-formatting rules
			'eqeqeq'                  : ['error', 'smart'],
			'one-var'                 : ['error', 'never'],
			'react/no-array-index-key': 'off',
		},
	},
]

export default config
